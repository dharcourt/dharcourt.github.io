/**
 * @module ui/layer/layer-import-file-inspector.reel
 * @requires montage/ui/component
 */
var Component = require("montage/ui/component").Component,
    AgsLoader = require("logic/layer/ags-loader").AgsLoader,
    UserLayersService = require("logic/mock-service/user-layers-service").UserLayersService;

/**
 * @class LayerUserAgsServiceInspector
 * @extends Component
 */
exports.LayerUserAgsServiceInspector = Component.specialize(/** @lends LayerUserAgsServiceInspector# */ {
    errorMessage: {
        value: ""
    },
    service: {
        value: null
    },
    constructor: {
        value: function LayerImportFileInspector() {

        }
    },
    enterDocument: {
        value: function () {
            this.serviceUrl = "";
            this.service = null;
        }
    },
    handleCancelButtonAction: {
        value: function (event) {
            event.stopPropagation();
            this.service = null;
        }
    },
    handleImportButtonAction: {
        value: function handleImportButtonAction() {
            var self = this,
                service = UserLayersService.getServiceByUrl(this.serviceUrl),
                serviceUrl = this.serviceUrl;

            if (!this.service) {
                if (service) {
                    self.dispatchEventNamed("serviceLoaded", true, true, service);
                } else {
                    this.service = {
                        url: serviceUrl
                    };

                    AgsLoader.load(serviceUrl)
                        .then(function (data) {
                            if (self.service && self.service.url === serviceUrl) {
                                service = UserLayersService.addService(data.service);
                                self.dispatchEventNamed("serviceLoaded", true, true, service);
                            }
                        }, function (error) {
                            self.errorMessage = error;
                            self.service = null;
                        });
                }
            }
        }
    }
});
