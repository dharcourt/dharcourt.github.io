var Component = require("montage/ui/component").Component,
    GeometryType = require("logic/model/geometry-type").GeometryType;

/**
 * @class FeatureSummary
 * @extends external:Component
 */
exports.FeatureSummary = Component.specialize(/** @lends FeatureSummary# */ {

    // Set by owner.
    feature: {
        get: function () {
            return this._feature;
        },
        set: function (feature) {
            if (feature && feature !== this._feature) {
                this._feature = feature;
                this.needsDraw = true;
            }
        }
    },

    // Optionally set by owner.
    displayLayerName: {
        value: false
    },

    // Optionally set by owner.
    fields: {
        get: function () {
            if (!this._fields) {
                this._fields = this.feature && this.feature.layer && this.feature.layer.featureFields.summary;
            }
            return this._fields;
        },
        set: function (fields) {
            if (fields && fields !== this._fields) {
                this._fields = fields;
                this.needsDraw = true;
            }
        }
    },

    // Set in serialization.
    _icon: {
        value: null
    },

    draw: {
        value: function () {
            var layer, style;
            if (this._icon && this.feature && this.feature.layer && this.feature.layer.renderer) {
                layer = this.feature.layer;
                style = layer.renderer.render(this.feature.properties);
                if (style.url) {
                    this._icon.style.background = "url('" + style.url + "') no-repeat center center";
                    this._icon.style.border = "none";
                } else if (layer.geometryType === GeometryType.MULTI_LINE_STRING) {
                    this._icon.style.background = "none";
                    this._icon.style.borderColor = style.strokeColor;
                    this._icon.style.borderStyle = "solid";
                    this._icon.style.borderWidth = style.strokeWeight + "px";
                } else if (layer.geometryType === GeometryType.POLYGON) {
                    this._icon.style.background = style.fillColor;
                    this._icon.style.borderColor = style.strokeColor;
                    this._icon.style.borderStyle = "solid";
                    this._icon.style.borderWidth = style.strokeWeight + "px";
                }
            }
        }
    }

});
