var Component = require("montage/ui/component").Component;

/**
 * @class ImportedFeatureSummary
 * @extends external:Component
 */
exports.ImportedFeatureSummary = Component.specialize(/** @lends ImportedFeatureSummary# */ {

    // Set by owner.
    feature: {
        get: function () {
            return this._feature;
        },
        set: function (feature) {
            if (feature && feature !== this._feature) {
                this._feature = feature;
                this._updateFields();
                this.needsDraw = true;
            }
        }
    },

    _updateFields: {
        value: function () {
            var vars = this.feature.properties.vars,
                keysHash = {},
                k;
            this.fields = [];

            if (!vars) {
                return;
            }
            for (var key in vars.display) {
                if (vars.display.hasOwnProperty(key) && vars.val[key]) {
                    k = vars.display[key].toLowerCase();
                    if (keysHash[k]) {
                        continue;
                    }
                    keysHash[k] = true; // need to prevent repeated fields like name and Name

                    this.fields.push({
                        key: vars.display[key],
                        value: vars.val[key]
                    });

                    if (this.fields.length > 3) {
                        break;
                    }
                }
            }
        }
    },

    fields: {
        value: []
    },

    // Set in serialization.
    _icon: {
        value: null
    },

    draw: {
        value: function () {
            var layer, style, size;
            if (this._icon && this.feature && this.feature.layer && this.feature.layer.renderer) {
                layer = this.feature.layer;
                style = layer.renderer.render(this.feature.properties);
                if (style.url) {
                    this._icon.style.background = "url('" + style.url + "') no-repeat center center";
                    this._icon.style.border = "none";
                    size = style.scaledSize || style.size;
                    if (size) {
                        this._icon.style["background-size"] = size.width + "px " + size.height + "px";
                    }
                }
            }
        }
    }

});
