/**
 * @module ui/figure-list.reel
 */
var Component = require("montage/ui/component").Component,
    RangeController = require("montage/core/range-controller").RangeController,
    PressComposer = require("montage/composer/press-composer").PressComposer;

/**
 * @class FigureList
 * @extends Component
 */
exports.FigureList = Component.specialize(/** @lends FigureList# */ {
    constructor: {
        value: function FigureList() {

        }
    },

    _figures: { value: null },

    _highlightedFigure:{ value: null },

    _preparedForAction: { value: false },

    enterDocument: {
        value: function (firstTime) {
            if (!firstTime) {
                this.prepareForActivationEvents();
            }
        }
    },

    exitDocument: {
        value: function () {
            if (this._preparedForAction) {
                this._preparedForAction = false;
                this._pressComposer.removeEventListener("press", this);
                this.removeComposer(this._pressComposer);
                this._pressComposer = null;

                this.repetition.element.removeEventListener("mouseover",this);
                this.repetition.element.removeEventListener("mousemove",this,false);
                this.repetition.element.removeEventListener("mouseleave",this,false);
            }
        }
    },

    handleMouseover: {
        value: function(e) {
            e.stopPropagation();
            this.highlightedFigure = e.srcElement.component.figure;
            this.repetition.element.addEventListener("mousemove",this,false);
            this.repetition.element.addEventListener("mouseleave",this,false);
            this.repetition.element.removeEventListener("mouseover",this);
        }
    },

    handleMousemove: {
        value: function(e) {
            e.stopPropagation();
            this.highlightedFigure = e.srcElement.component.figure;
        }
    },

    handleMouseleave: {
        value: function(e) {
            e.stopPropagation();
            if (this.highlightedFigure) {
                this.highlightedFigure = null
            }
            this.repetition.element.removeEventListener("mousemove",this,false);
            this.repetition.element.removeEventListener("mouseleave",this,false);
            this.repetition.element.addEventListener("mouseover",this);
        }
    },

    handlePress: {
        value: function (event) {
            event.stopPropagation();
            if (event.targetElement.component && event.targetElement.component.figure) {
                this.highlightedFigure = null;
                this.dispatchEventNamed("selectFigureAction", true, true, {figure: event.targetElement.component.figure});
            }
        }
    },

    highlightedFigure: {
        set: function (value) {
            if (value !== this._highlightedFigure) {
                if (this._highlightedFigure) {
                    this._highlightedFigure.isHighlighted = false;
                }
                if (value) {
                    value.isHighlighted = true;
                }
                this._highlightedFigure = value;
            }
        },
        get: function() {
            return this._highlightedFigure;
        }
    },

    isEraser: { value: false },

    listIsEmptyText: { value:"" },

    prepareForActivationEvents: {
      value: function () {
          if (!this._preparedForAction) {
              this._preparedForAction = true;
              this._pressComposer = new PressComposer();
              this.addComposer(this._pressComposer);
              this._pressComposer.addEventListener("press", this, false);
              this.repetition.element.addEventListener("mouseover",this,false);
          }
      }
    },

    rangeController: { value: null },

    renderPreviews: {
        value: function() {
            var iterations = this.repetition.iterations, i, len;
            if (iterations && iterations.length > 0) {
                for (i = 0, len = iterations.length; i < len; i++) {
                    iterations[i]._childComponents[0].needsDraw = true;
                }
            }
        }
    }
});
