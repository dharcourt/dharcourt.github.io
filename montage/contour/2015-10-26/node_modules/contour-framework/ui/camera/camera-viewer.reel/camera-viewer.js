/**
 * @module ui/camera/camera-viewer.reel
 */
var Component = require("montage/ui/component").Component,
    CameraImageViewer = require("ui/camera/camera-image-viewer.reel").CameraImageViewer,
    OzolioViewer = require("ui/camera/camera-ozolio-viewer.reel").CameraOzolioViewer;

/**
 * @class CameraViewer
 * @extends Component
 */
exports.CameraViewer = Component.specialize(/** @lends CameraViewer# */ {
    constructor: {
        value: function CameraViewer() {

        }
    },

    _camera: { value: null },

    __imageViewer: {
        value: null
    },

    _imageViewer: {
        get: function () {
            if (!this.__imageViewer) {
                this.__imageViewer = new CameraImageViewer();
                this.__imageViewer.owner = this;
                this.__imageViewer.defineBinding("camera", {"<-": "owner.camera"});
            }
            return this.__imageViewer;
        }
    },

    __ozolioViewer: {
        value: null
    },

    _ozolioViewer: {
        get: function () {
            if (!this.__ozolioViewer) {
                this.__ozolioViewer = new OzolioViewer();
                this.__ozolioViewer.owner = this;
                this.__ozolioViewer.defineBinding("camera", {"<-": "owner.camera"});
            }
            return this.__ozolioViewer;
        }
    },

    _preparedForAction: { value: false },

    camera: {
        set: function (val) {
            if (val != this._camera) {
                this._camera = val;
                this.needsDraw = true;
            }
        },
        get: function () {
            return this._camera;
        }
    },

    draw: {
        value: function () {

            if (this.camera && this.camera.properties.visitUrl) {
                this._visitUrlElement.setAttribute("href", this.camera.properties.visitUrl);
            }
        }
    },

    hasBottomBar: { value: true },

    hasTitle: { value: true },

    isTitleOverlaid: { value: false }


});
