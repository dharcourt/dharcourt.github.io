var OverlayComponent = require("ui/map/overlay-component").OverlayComponent;

/**
 * @class LayerOverlayComponent
 * @extends Component
 */
var LayerOverlayComponent = exports.LayerOverlayComponent = OverlayComponent.specialize(/** @lends LayerOverlayComponent */ {

    constructor: {
        value: function LayerOverlayComponent() {
            if (this.constructor === LayerOverlayComponent) {
                throw new Error("LayerOverlayComponent cannot be instantiated.");
            }
        }
    },

    _deregister: {
        value: function () {
            if (this._layer && this._engine) {
                this._engine.removeOverlayComponent(this);
            }
        }
    },

    _engine: {
        value: null
    },

    _events: {
        value: null
    },

    _layer: {
        value: null
    },

    _mapComponent: {
        value: null
    },

    _register: {
        value: function () {
            if (this._layer && this._engine) {
                this._engine.addOverlayComponent(this);
            }
        }
    },

    /**
     * @protected
     * This property must be overridden in every overlay subclass.
     */
    _type: {
        value: null
    },

    enabled: {
        get: function () {
            if (this._enabled === null) {
                this._enabled = false;
            }
            return this._enabled;
        },
        set: function (value) {
            if (value !== undefined && this._enabled !== value) {
                if (value === true) {
                    this._register();
                } else {
                    this._deregister();
                }
                this._enabled = value;
            }
        }
    },

    engine: {
        get: function () {
            return this._engine;
        },
        set: function (value) {
            if (value && value !== this._engine) {
                if (this._engine) {
                    this._engine.removeOverlayComponent(this);
                }
                this._engine = value;
                this._register();
                //this._engine.addOverlayComponent(this);
            }
        }
    },

    events: {
        get: function () {
            if (this._events === null) {
                this._events = {};
            }
            return this._events;
        },
        set: function (value) {
            this._events = value;
        }
    },

    hasTemplate: {
        value: true
    },

    isRegistered: {
        value: false
    },

    layer: {
        get: function () {
            return this._layer;
        },
        set: function (value) {
            if (value && value !== this._layer) {
                this._layer = value;
            }
        }
    },

    mapComponent: {
        get: function () {
            return this._mapComponent;
        },
        set: function (value) {
            if (value) {
                this._mapComponent = value;
            }
        }
    },

    type: {
        enumerable: true,
        writeable: false,
        get: function () {
            return this._type;
        }
    }
});
