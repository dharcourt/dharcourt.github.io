/**
 * @module ui/user-select-list.reel
 */
var Component = require("montage/ui/component").Component;

/**
 * @class UserSelectList
 * @extends Component
 */
exports.UserSelectList = Component.specialize(/** @lends UserSelectList# */ {
    constructor: {
        value: function UserSelectList() {

            this._selectedPropertyName = "isEnabled";
        }
    },

    showArrow: {
        value: false
    },

    _preparedForAction: {
        value: false
    },

    prepareForActivationEvents: {
        value: function () {
            if (!this._preparedForAction) {
                this.addEventListener("checkboxRowCheckedAction", this, false);
                this._preparedForAction = true;
            }
        }
    },

    _selectedItem: {
        value: null
    },

    _value: {
        value: null
    },

    value: {
        set: function (value) {
            this._value = value;
            if (!this._value) {
                this._selectedItem = null;
                return;
            }
            var len = this._value.length;
            for (var i = 0; i < len; i++) {
                if (this._value[i].isEnabled) {
                    this._selectedItem = this._value[i];
                    break;
                }
            }
        },
        get: function () {
            return this._value;
        }
    },

    handleCheckboxRowCheckedAction: {
        value: function (event) {
            // Press the same selected item
            if (this._selectedItem && this._selectedItem.title === event.detail.title) {
                this._selectedItem.isEnabled = true;
            } else {
                if (this._selectedItem) {
                    this._selectedItem.isEnabled = false;
                }
                this._selectedItem = event.detail;
            }
            this.dispatchEventNamed("userListItemSelected", true, true);
        }
    },

    _cloneValue: {
        value: function (v) {
            var newValue = null;
            if (v instanceof Array) {
                newValue = [];
                var len = v.length;
                for (var i = 0; i < len; i++) {
                    newValue.push(this._cloneValue(v[i]));
                }
            } else if (typeof(v) == "object") {
                newValue = {};
                for (var attr in v) {
                    if (typeof v[attr] == "object" || typeof v[attr] == "function") {
                        continue;
                    }
                    newValue[attr] = v[attr];
                }
            }
            return newValue;
        }
    }
});
