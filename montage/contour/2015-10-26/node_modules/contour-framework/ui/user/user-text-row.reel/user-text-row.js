/**
 * @module ui/user-text-row.reel
 */
var Component = require("montage/ui/component").Component,
    PressComposer = require("montage/composer/press-composer").PressComposer;

/**
 * @class UserTextRow
 * @extends Component
 */
exports.UserTextRow = Component.specialize(/** @lends UserTextRow# */ {
    constructor: {
        value: function UserTextRow() {

        }
    },

    _value: {
        value: null
    },

    value: {
        set: function (value) {
            this._value = value;
            this.dispatchOwnPropertyChange("label", this.label);
        },
        get: function () {
            return this._value;
        }
    },

    labelFunction: {
        value: null
    },

    label: {
        get: function () {
            if (this.labelFunction) {
                return this.labelFunction(this.value);
            } else {
                return this.value;
            }
        }
    },

    _pressComposer: {
        value: null
    },

    enterDocument: {
        value: function (firstTime) {
            if (firstTime) {
                this._pressComposer = new PressComposer();
                this.addComposerForElement(this._pressComposer, this.element);
            }
        }
    },

    prepareForActivationEvents: {
        value: function () {
            if (!this._preparedForAction && this._pressComposer) {
                this._pressComposer.addEventListener("press", this, false);
                this._preparedForAction = true;
            }
        }
    },

    handlePress: {
        value: function (event) {
            event.stopPropagation();
            this.dispatchEventNamed("textRowPressAction", true, true, this.value);
        }
    }
});
