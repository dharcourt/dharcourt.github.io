/**
 * @module ui/brief-browser.reel
 */
var Component = require("montage/ui/component").Component,
    BriefSelector = require("logic/mock-service/brief-selector").BriefSelector,
    MapMode = require("ui/map/map.reel/map").Mode;

/**
 * @class BriefBrowser
 * @extends Component
 */
exports.BriefBrowser = Component.specialize(/** @lends BriefBrowser.prototype */{
    loading: {
        value: false
    },

    _areasList: {
        value: null
    },

    availableMapModes: {
        value: [
            MapMode["AreaBriefRectangle"],
            MapMode["AreaBriefCircle"]
        ]
    },

    prepareForActivationEvents: {
        value: function () {
            this.application.map.addEventListener("selectionAction", this, false);
        }
    },

    handleSelectionAction: {
        value: function (e) {
            var self = this,
                area;

            e.stopPropagation();

            if (e.detail.selectionType === "areaBriefCircle" || e.detail.selectionType === "areaBriefRectangle") {
                this.loading = true;

                area = this.application.delegate.createBriefAreaWithBoundingBox(e.detail.bbox, e.detail.selectionType);

                this.application.mockService.query(new BriefSelector(area)).then(function (brief) {
                    self.loading = false;
                    area.brief = brief;
                    self._areasList.briefAreas.push(area);
                });
            }
        }
    },

    handleCreateReportButtonAction: {
        value: function (e) {
            var self = this,
                area = this.application.delegate.createBriefAreaWithCurrentExtent();

            this.loading = true;

            e.stopPropagation();

            this.application.mockService.query(new BriefSelector(area)).then(function (brief) {
                self.loading = false;
                area.brief = brief;
                self._areasList.briefAreas.push(area);
            });
        }
    },

    handleSelectAreaBriefAction: {
        value: function (e) {
            var area = e.detail;

            e.stopPropagation();

            this.application.delegate.inspectAreaBrief({
                area: area,
                brief: area.brief
            });
        }
    },

    succession: {
        value: null
    },

    _briefInspector: {value: null},

    _briefInspectorPromise: {value: null},

    openBriefInspector: {
        value: function (brief) {
            var self = this;

            // opening for first time
            if (!this._briefInspectorPromise) {
                this._briefInspectorPromise = require.async("ui/brief/brief-inspector.reel")
                    .then(function (exports) {
                        self._briefInspector = new exports.BriefInspector();
                        self._briefInspector.briefDetails = brief;
                        self.panelSuccession.components.push(self._briefInspector);

                        return self._briefInspector;
                    });

            // not currently open
            } else if (this.panelSuccession.content !== this._briefInspector) {
                this._briefInspector.briefDetails = brief;
                this.panelSuccession.components.push(this._briefInspector);
            }

            return this._briefInspectorPromise;
        }
    }
});
