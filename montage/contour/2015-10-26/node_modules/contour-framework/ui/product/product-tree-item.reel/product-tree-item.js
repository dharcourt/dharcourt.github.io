/**
 * @module "ui/product/product-tree-item.reel"
 * @requires montage/ui/component
 */
var Component = require("montage/ui/component").Component,
    ProjectionUtilities = require("logic/map/projection-utilities").ProjectionUtilities,
    PressComposer = require("montage/composer/press-composer").PressComposer;

/**
 * @class ProductTreeItem
 * @extends Component
 */
var ProductTreeItem = exports.ProductTreeItem = Component.specialize(/** @lends ProductTreeItem.prototype */{

    identifier: {
        value: "productTreeItem"
    },

    _isImageFile: {
        value: function () {
            return this._fileExtension && ProductTreeItem._imageExtensions.hasOwnProperty(this._fileExtension);
        }
    },

    _dateConverter: {
        value: {
            convert: function(input) {
                return input ? input.format("M.DD.YYYY H\\h:mm\\m") : "";
            }
        }
    },

    _productDate: {
        set: function (value) {
            if (value) {
                value.converter = this._dateConverter;
            }
        }
    },

    _node: {
        value: null
    },

    /**
     * Bound by parent
     */
    node: {
        get: function () {
            return this._node;
        },
        set: function (value) {
            if (this._node !== value) {
                this._node = value;
                this.coordinateString = null;
            }
        }
    },

    latitudeString: {
        get: function () {
            if (this.node) {
                var string;
                if (!this.node.data || !this.node.data.coordinates) {
                    string = "";
                } else if (this.node.data.coordinates[1] < 0) {
                    string = (this.node.data.coordinates[1]*-1).toFixed(2) + " S"
                } else {
                    string = (this.node.data.coordinates[1]).toFixed(2) + " N"
                }
                return string;
            }
        }
    },

    longitudeString: {
        get: function () {
            if (this.node) {
                var string;
                if (!this.node.data || !this.node.data.coordinates) {
                    string = "";
                } else if (this.node.data.coordinates[0] < 0) {
                    string = (this.node.data.coordinates[0]*-1).toFixed(2) + " E"
                } else {
                    string = (this.node.data.coordinates[0]).toFixed(2) + " W"
                }
                return string;
            }
        }
    },

    coordinateString: {
        get: function () {
            if (!this._coordinateString) {
                this._coordinateString = this.latitudeString + '\u00B0, ' + this.longitudeString  + '\u00B0';
            }
            return this._coordinateString;
        },
        set: function (value) {
            if (value !== this._coordinateString) {
                this._coordinateString = value;
            }
        }
    }
});
