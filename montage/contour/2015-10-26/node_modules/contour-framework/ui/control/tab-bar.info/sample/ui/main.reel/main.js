var Component = require("montage/ui/component").Component,
    L = require("node_modules/leaflet/dist/leaflet.js");

/**
 * @class Main
 * @extends external:Component
 */
exports.Main = Component.specialize(/** @lends Main# */ {

    _map: { // Set in serialization.
        value: undefined
    },

    _tabBar2: { // Set in serialization.
        set: function (tabBar) {
            // Initialize tab bar values that can't be defined in serialization.
            tabBar.selectedTab = this._tabs[2];
        }
    },

    _tabBar4Succession: { // Set in serialization.
        value: undefined
    },

    _tabs: { // Used in serialization.
        value: [
            {iconClass: "Main-tabBar-icon-tree", label: "Tree", value: "tree"},
            {iconClass: "Main-tabBar-icon-list", label: "List", value: "list"},
            {iconClass: "Main-tabBar-icon-backgrounds", label: "Backgrounds", value: "backgrounds"},
            {iconClass: "Main-tabBar-icon-imports", label: "Imports", value: "imports"}
        ]
    },

    templateDidLoad: {
        value: function () {
            // Set the page title here so index.html can remain generic.
            window.document.title = "Tab Bar Sample";
        }
    },

    draw: {
        value: function () {
            // Load a Leaflet map as a background.
            if (!this.__leaflet) {
                this.__leaflet = L.map(this._map).setView([0, 110], 6);
                L.tileLayer('http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/WMTS?service=WMTS&version=1.0.0&request=gettile&format=image/png&tileMatrix={z}&TileRow={y}&TileCol={x}&style=default&tileMatrixSet=default028mm', {
                    attribution: 'test',
                    maxZoom: 18
                }).addTo(this.__leaflet);
            }
        }
    },

    handleShuffleAction: {
        value: function (event) {
            // Shuffle the tabs of tab bar #2, using one of the only 9 possible
            // shuffles that ensure all of the 4 tabs in that bar are moved.
            // Use a linear congruential generator instead of Math.random() so
            // the shuffles are repeatable to make testing easier.
            this.__random = (8121 * (this.__random || 0) + 28411) % 134456;
            var i = 1 + this.__random % 9;
            this._tabs = i === 1 ? [this._tabs[1], this._tabs[0], this._tabs[3], this._tabs[2]] :
                         i === 2 ? [this._tabs[1], this._tabs[2], this._tabs[3], this._tabs[0]] :
                         i === 3 ? [this._tabs[1], this._tabs[3], this._tabs[0], this._tabs[2]] :
                         i === 4 ? [this._tabs[2], this._tabs[0], this._tabs[3], this._tabs[1]] :
                         i === 5 ? [this._tabs[2], this._tabs[3], this._tabs[0], this._tabs[1]] :
                         i === 6 ? [this._tabs[2], this._tabs[3], this._tabs[1], this._tabs[0]] :
                         i === 7 ? [this._tabs[3], this._tabs[0], this._tabs[1], this._tabs[2]] :
                         i === 8 ? [this._tabs[3], this._tabs[2], this._tabs[0], this._tabs[1]] :
                                   [this._tabs[3], this._tabs[2], this._tabs[1], this._tabs[0]];
        }
    },

    _tabBar4Pane1: {
        get: function () {
            var self = this;
            return require.async("ui/pane.reel").then(function(exports) {
                console.log("Creating pane 1A");
                var pane = new exports.Pane();
                pane.name = "1A";
                pane.hasToggle = true;
                pane.succession = self._tabBar4Succession;
                return pane;
            });
        }
    },

    _tabBar4Pane2: {
        get: function () {
            return require.async("ui/pane.reel").then(function(exports) {
                console.log("Creating pane 2");
                var pane = new exports.Pane();
                pane.name = "2";
                return pane;
            });
        }
    },

    _tabBar4Pane3: {
        get: function () {
            return require.async("ui/pane.reel").then(function(exports) {
                console.log("Creating pane 3");
                var pane = new exports.Pane();
                pane.name = "3";
                return pane;
            });
        }
    },

    _tabBar4Pane4: {
        get: function () {
            return require.async("ui/pane.reel").then(function(exports) {
                console.log("Creating pane 4");
                var pane = new exports.Pane();
                pane.name = "4";
                return pane;
            });
        }
    }

});
