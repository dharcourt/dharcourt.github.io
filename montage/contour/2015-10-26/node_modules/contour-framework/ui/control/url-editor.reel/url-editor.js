var Component = require("montage/ui/component").Component;

/**
 * @class UrlEditor
 * @extends TextArea
 */
exports.UrlEditor = Component.specialize(/** @lends UrlEditor.prototype */{
    isDirty: {
        value: false
    },
    _hasError: {
        value: false
    },
    hasError: {
        get: function () {
            return this._hasError
        },
        set: function ( val ) {
            if ( val ) {
                this.label = this.errorMessage;
            } else {
                this.label = this._label;
            }
            this._hasError = val;
        }
    },
    enabled: {
        value: true
    },
    constructor: {
        value: function UrlEditor() {

        }
    },
    templateDidLoad: {
        value: function templateDidLoad (){
            this._label = this.label;
        }
    },
    prepareForActivationEvents: {
        value: function ( ) {
            this.textField = this.templateObjects.textField.element;

            this.textField.addEventListener('blur', this);
            this.textField.addEventListener('keyup', this);
        }
    },
    _checkUrl: {
        /**
         * Check if url is valid
         * @param {string} url
         * @return {boolean} return true if url is valid and false if not
         * @private
         */
        value: function ( url ) {
            var reg = /(http|ftp|https):\/\/[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])?/;
            return reg.test(url);
        }
    },
    handleBlur: {
        value: function () {
            this.isDirty = !!this.value;
            this.hasError = !this._checkUrl(this.value) && this.isDirty;
        }
    },
    handleKeyup: {
        value: function ( ) {
            if ( this.isDirty ) {
                this.handleBlur();
            }
        }
    }
});
