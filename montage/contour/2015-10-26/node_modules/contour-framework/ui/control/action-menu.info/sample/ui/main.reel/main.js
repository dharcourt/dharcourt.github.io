/**
 * @module ui/main.reel
 * @requires montage/ui/component
 */
var Component = require("montage/ui/component").Component;

/**
 * @class Main
 * @extends Component
 */
exports.Main = Component.specialize(/** @lends Main.prototype */ {
    constructor: {
        value: function Main() {

        }
    },

    _preparedForAction: {
        value: false
    },

    exitDocument: {
        value: function () {
            if (this._preparedForAction) {
                this._preparedForAction = false;
                this.removeEventListener("action", this);
            }
        }
    },

    enterDocument: {
        value: function (firstTime) {
            if (firstTime) {
                this.templateObjects.actionMenu1.addEventListener("menuAction", this, false);
                this.templateObjects.actionMenu2.addEventListener("menuAction", this, false);
                this._preparedForAction = true;
            }
        }
    },

    _getSelectedMenuActionName: {
        value: function (event) {
            var eventData = event.detail.item;
            var actionName = "";
            if (typeof(eventData) == "string") {
                actionName = eventData;
            } else if (eventData.hasOwnProperty("label") && typeof(eventData.value) == "string") {
                actionName = eventData.value;
            }
            return actionName;
        }
    },

    handleMenu1MenuAction: {
        value: function (event) {
            this.templateObjects.titleBar1Description.actionName = this._getSelectedMenuActionName(event);
        }
    },

    handleMenu2MenuAction: {
        value: function (event) {
            this.templateObjects.titleBar2Description.actionName = this._getSelectedMenuActionName(event);
        }
    }
});
