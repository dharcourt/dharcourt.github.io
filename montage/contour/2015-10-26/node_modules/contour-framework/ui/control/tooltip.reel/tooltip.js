/**
 * @module "ui/control/tooltip.reel"
 */
var Component = require("montage/ui/component").Component;

/**
 * @class Tooltip
 * @extends Component
 */
exports.Tooltip = Component.specialize(/** @lends Tooltip.prototype */ {

    _activeTip: { value: null },

    _direction: { value: null },

    _target: { value: null },

    _isActive: { value: false },

    target: {
        set: function (value) {
            if (this._target) {
                this._target.removeEventListener("mouseover", this);
            }

            this._target = value;
            if (this._target) {
                this._target.addEventListener("mouseover", this);
            }
        }
    },



    direction: {
        get: function () {
            return this._direction
        },
        set: function (value) {
            this._direction = value;


        }
    },

    handleMouseover: {
        value: function(e) {
            e.stopPropagation();
            this._target.addEventListener("mouseleave", this);
            this._isActive = true;
            this.needsDraw = true;
        }
    },

    handleMouseleave: {
        value: function (e) {
            e.stopPropagation();
            this._target.removeEventListener("mouseleave", this);
            this._isActive = false;
            this.needsDraw = true;
        }
    },


    tipText: { value: null },

    draw: {
        value: function () {
            switch (this.direction) {
                case "bottom":
                    this._activeTip = this._tipBottom;
                    break;
                case "left":
                    this._activeTip = this._tipLeft;
                    break;
                case"right":
                    this._activeTip = this._tipRight;
                    break;
                default:
                    this._activeTip = this._tipTop;
                    break;

            }
            if (this._activeTip) {
                this._activeTip.textContent = this.tipText;
            }

        }
    }
});
