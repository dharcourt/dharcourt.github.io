var Feature = require("logic/model/feature").Feature,
    Enumeration = require("montage-data/logic/model/enumeration").Enumeration,
    ObjectDescriptor = require("montage-data/logic/model/object-descriptor").ObjectDescriptor,
    Product = require("logic/model/product").Product;

/**
 * A hazard feature.
 *
 * @class
 * @extends Feature
 */
exports.Hazard = Feature.specialize(/** @lends Hazard.prototype */ {

    /***************************************************************************
     * Basic information
     *
     * Most of these properties are defined in the Feature superclass.
     */

    /**
     * @type {Feature.Type}
     */
    type: {
        value: Feature.Type.HAZARD
    },

    /***************************************************************************
     * Products
     */

    products: {
        get: function () {
            var hazard = this;
            if (!this._products) {
                this._products = Object.create({}, {
                    list: {
                        get: function () { return hazard._products_list; }
                    },
                    tree: {
                        get: function () { return hazard._products_tree; }
                    }
                });
            }
            return this._products;
        }
    },

    _products_list: {
        get: function () {
            if (!this.__products_list) {
                this.__products_list = [];
            }
            return this.__products_list;
        }
    },

    _products_tree: {
        get: function () {
            if (!this.__products_tree) {
                this.__products_tree = {parent: null, children: []};
            }
            return this.__products_tree;
        }
    },

    // TODO: Switch callers to using .products.list and remove this property,
    // including its use in TYPE below and in HazardService.
    legacyProducts: {
        get: function () {
            return this._products_tree;
        }
    }

}, /** @lends Hazard */ {

    /***************************************************************************
     * Montage Data
     */

    /**
     * @type {external:ObjectDescriptor}
     */
    TYPE: {
        get: ObjectDescriptor.getterFor(exports, "Hazard", {
            "_products_list": {destinationType: Product.TYPE},
            "_products_tree": {destinationType: Product.TYPE},
            "legacyProducts": {destinationType: Product.TYPE},
            "products.list": {destinationType: Product.TYPE},
            "products.tree": {destinationType: Product.TYPE}
        })
    },

    /***************************************************************************
     * Types
     */

    /**
     * Type of {@link HazardLayer#hazardCategories} elements.
     *
     * @class
     */
    Category: {
        get: Enumeration.getterFor("_Category", "id", "name", "_padding", {
            padding: {
                get: function () {
                    return this._padding || 0;
                }
            }
        }, {
            EVENT: ["EVENT", "Event", 2],
            EXERCISE: ["EXERCISE", "EXERCISE", 8],
            OTHER: ["OTHER", "OTHER", 2],
            RESPONSE: ["RESPONSE", "RESPONSE", 6]
        })
    },

    /**
     * Type of {@link HazardLayer#hazardSeverities} elements.
     *
     * @class
     */
    Severity: {
        get: Enumeration.getterFor("_Severity", "id", "name", "_color", {
            color: {
                get: function () {
                    return this._color || "0, 0, 0";
                }
            }
        }, {
            WARNING: ["WARNING", "Warning", "255, 0, 0"],
            WATCH: ["WATCH", "Watch", "255, 255, 0"],
            ADVISORY: ["ADVISORY", "Advisory", "0, 255, 0"],
            INFORMATION: ["INFORMATION", "Information", "49, 153, 240"],
            TERMINATION: ["TERMINATION", "Termination", "102, 102, 102"]
        })
    },

    /**
     * Type of {@link HazardLayer#hazardTypes} elements.
     *
     * @class
     */
    Type: {
        get: Enumeration.getterFor("_Type", "id", "name", "iconImage")
    }

});
