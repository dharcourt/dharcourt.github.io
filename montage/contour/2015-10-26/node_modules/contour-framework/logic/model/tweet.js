/**
 * @module logic/Tweet.js
 */
var Montage = require("montage").Montage,
    Feature = require("logic/model/feature").Feature,
    moment = require("moment-timezone");

var AttributeMap = {
    "lat": "latitude",
    "lng": "longitude"
};
/**
 * @class product
 * @extends Feature
 *
 * Object representing a feature. This may or may not be a placehoder (TBD).
 *
 */
var Tweet = exports.Tweet = Feature.specialize(/** @lends product.prototype */ {

    constructor: {
        value: function Tweet() {
        }
    },

    _segments: {
        value: undefined
    },

    segments: {
        get: function () {
            if (this._segments === undefined) {

                var text, urlRegExp, segments = [], last, result;

                if (this.text) {
                    text = this.text;
                    urlRegExp = /https?:\/\/\S+/gi;
                    segments = [];
                    last = 0;
                    while ((result = urlRegExp.exec(text)) !== null) {
                        segments.push({text: text.slice(last, result.index), url: result[0]});
                        last = result.index + result[0].length;
                    }
                    if (last < text.length) {
                        segments.push({text: text.slice(last)});
                    }
                    this._segments = segments;
                }
            }

            return this._segments;
        }
    }


}, {

    initialize: {
        value: function (data) {
            //var product = new product();
            var tweet = new Tweet();

            for (var key in data) {
                if (AttributeMap[key]) {
                    tweet[AttributeMap[key]] = data[key];
                } else {
                    tweet[key] = data[key];
                }
            }
            tweet.latitude = parseFloat(tweet.latitude);
            tweet.longitude = parseFloat(tweet.longitude);
            tweet.geometry = {
                type: "Point",
                coordinates: [tweet.longitude, tweet.latitude]
            };
            tweet.created = moment.utc(tweet.created);
            return tweet;
        }
    }
});