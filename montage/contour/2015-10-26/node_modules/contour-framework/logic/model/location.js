/**
 * @module logic/location.js
 */

var Montage = require("montage").Montage,
    ObjectStream = require("logic/mock-montage-data/object-stream").ObjectStream,
    LocationSelector = require("logic/mock-service/location-selector").LocationSelector;

var AttributeMap = {
    "place_id": "placeId",
    "place_name": "description",
    "center": "coordinates"
};

/**
 * @class product
 * @extends Montage
 *
 * Object representing a feature. This may or may not be a placehoder (TBD).
 *
 */
var Location = exports.Location = Montage.specialize(/** @lends Location.prototype */ {

    constructor: {
        value: function Location() {
        }
    }

}, {
    initialize: {
        value: function (data) {
            var location = {};

            for (var key in data) {
                if (AttributeMap[key]) {
                    location[AttributeMap[key]] = data[key];
                } else {
                    location[key] = data[key];
                }
            }
            Object.defineProperty(location,"searchTerms",{
                writeable:false,
                get: function() {
                    var strings = [this.description],
                        terms = {},
                        string, split, i, j, n, m;
                    for (i = 0, n = strings.length; i < n; ++i) {
                        string = strings[i] && strings[i].replace(/[\W_]+/g, " ").trim().toLowerCase();
                        split = string && string.split(" ");
                        for (j = 0, m = split ? split.length : 0; j < m; ++j) {
                            terms[split[j]] = this;
                        }
                    }
                    return terms;
                }
            });

            return location;
        }
    }
});
