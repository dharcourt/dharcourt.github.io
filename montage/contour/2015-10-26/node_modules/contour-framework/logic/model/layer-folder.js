var Montage = require("montage").Montage;

/**
 * Container of layer folders and [layer references]{@link LayerReference}.
 * Layer trees are rooted in a layer folder and therefore contain a combination
 * of layer folders and layer references.
 *
 * @class
 * @extends external:Montage
 */
exports.LayerFolder = Montage.specialize(/** @lends LayerFolder# */ {

    name: { // Needs to be set by whoever creates this folder.
        value: undefined
    },

    parent: { // Null for the root of a tree.
        value: null
    },

    children: { // Cannot be set but its contents can be modified.
        get: function() {
            if (!this._children) {
                this._children = [];
            }
            return this._children;
        }
    },

    isEnabled: {
        get: function () {
            var i, n, child, enabled = false;
            for (i = 0, n = this.children ? this.children.length : 0; i < n; ++i) {
                child = this.children[i];
                if (child && child.children === null) {
                    enabled = child.isEnabled;
                    if (enabled === false) {
                        break;
                    }
                }
            }
            return enabled;
        },
        set: function (isEnabled) {
            if (isEnabled !== this.isEnabled && this.isSelectable) {
                var i, n, child;
                for (i = 0, n = this.children ? this.children.length : 0; i < n; ++i) {
                    child = this.children[i];
                    if (child && child.children === null) {
                        child.isEnabled = isEnabled;
                    }
                }
            }
        }
    },

    isExpanded: {
        value: false
    },

    isSelectable: {
        value: false
    }

});
