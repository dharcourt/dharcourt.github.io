/**
 * @module logic/User-service.js
 */
var ObjectService = require("logic/mock-montage-data/object-service").ObjectService,
    ObjectStream = require("logic/mock-montage-data/object-stream").ObjectStream,
    User = require("logic/model/user").User;

/**
 * @class UserService
 * @extends ObjectService
 */
exports.UserService = ObjectService.specialize(/** @lends UserService.prototype */ {
    constructor: {
        value: function UserService() {
            this.super("user");
        }
    },

    _mockUserSettings: {
        value: {
            languages: [
                {
                    title: "English (U.S.)",
                    isEnabled: false,
                    isHidden: false
                },
                {
                    title: "English (U.K.)",
                    isEnabled: true,
                    isHidden: false
                }
            ],
            timeZones: [
                {
                    label: "Washington, D.C.",
                    country: "United States",
                    city: "Washington, D.C."
                },
                {
                    label: "Honolulu",
                    country: "United States",
                    city: "Honolulu"
                },
                {
                    label: "Tokyo",
                    country: "Japan",
                    city: "Tokyo"
                },
                {
                    label: "Sydney",
                    country: "Australia",
                    city: "Sydney"
                },
                {
                    label: "London",
                    country: "United Kingdom",
                    city: "London"
                }
            ],
            bookmarks: [
                {
                    title: "BookMark1",
                    id: "1",
                    isEnabled: false,
                    isHidden: false
                },
                {
                    title: "BookMark2",
                    id: "2",
                    isEnabled: true,
                    isHidden: false
                },
                {
                    title: "BookMark3",
                    id: "3",
                    isEnabled: false,
                    isHidden: false
                },
                {
                    title: "BookMark4",
                    id: "4",
                    isEnabled: false,
                    isHidden: false
                }
            ],
            saveHazardFilter: {
                title: "Save Hazard Filter",
                isEnabled: true
            },
            notificationSound: {
                title: "Notification Sound",
                isEnabled: false
            }

        }
    },

    query: {
        value: function (selector) {
            var self = this;
            var stream = new ObjectStream(selector);
            setTimeout(function () {
                var user = User.initialize(self._mockUserSettings);
                stream.add(user);
                stream.resolve(user);
            }, 0);
            return stream;
        }
    },

    save: {
        value: function (value) {
            this._mockUserSettings = value;
        }
    }
});
