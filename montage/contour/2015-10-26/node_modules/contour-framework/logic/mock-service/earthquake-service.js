/**
 * @module logic/earthquake-service.js
 */
var Earthquake = require("logic/model/earthquake").Earthquake;
var ObjectService = require("logic/mock-montage-data/object-service").ObjectService;
var ObjectStream = require("logic/mock-montage-data/object-stream").ObjectStream;

/**
 * @class EarthquakeService
 * @extends ObjectService
 *
 * Object representing a service that provides data about earthquakes. This
 * placeholder version just generates random earthquake data. Eventually this
 * earthquake service class will be generated dynamically from a blueprint
 * defining the actual web service that will be used to provide the data.
 */
exports.EarthquakeService = ObjectService.specialize(/** @lends EarthquakeService.prototype */ {
    constructor: {
        value: function EarthquakeService() {
            this.super("earthquake");
        }
    },

    query: {
        value: function (selector) {
            var stream = new ObjectStream(selector);
            if (selector.range) {
                var request = new XMLHttpRequest();
                request.onload = this._onLoad.bind(this, request, stream);
                request.open("get", "http://agsctest.pdc.org/arcgis/rest/services/global/pdc_historical_hazards/MapServer/4/query?f=json&geometryType=esriGeometryEnvelope&returnGeometry=true&outSR=102100&geometry={xmin:-20037508.342789244,ymin:-763147.2903991991,xmax:-9275174.760236429,ymax:7357522.594617928,spatialReference:{wkid:102100}}&outFields=*", true);
                request.send();
            } else {
                stream = new ObjectStream(selector);
                stream.resolve([]);
            }
            return stream;
        }
    },

    _onLoad: {
        value: function (request, stream) {
            var data = JSON.parse(request.responseText).features;
            for (i = 0, n = data.length; i < n; i += 1) {
                stream.add([new Earthquake(
                    data[i].geometry.points[0][0],
                    data[i].geometry.points[0][1],
                    Number(data[i].attributes.MAGNITUDE))]);
            }
        }
    }
});
