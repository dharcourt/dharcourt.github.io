/**
 * @module logic/hazard-severity-service.js
 */
var ObjectService = require("logic/mock-montage-data/object-service").ObjectService,
    ObjectStream = require("logic/mock-montage-data/object-stream").ObjectStream,
    HazardSeverity = require("logic/mock-model/hazard-severity").HazardSeverity;

/**
 * @class HazardSeverityService
 * @extends ObjectService
 *
 * Object representing a service that provides feature data from PDC's Hazard and
 * Product Service. This is a mock service used for testing purposes.
 */
var HazardSeverityService = exports.HazardSeverityService = ObjectService.specialize(/** @lends HazardService.prototype */ {

    constructor: {
        value: function HazardSeverityService() {
            this.super("hazardSeverityService");
        }
    },
    severityArray: {
        get: function() {
            return HazardSeverityService.severityArray;
        }
    },
    severityById: {
        get: function() {
            return HazardSeverityService.severityById;
        }
    },
    query: {
        value: function (selector) {
            var stream = new ObjectStream(selector), results;
            if (selector.severityId) {
                results = [this.severityById[selector.severityId]];
            } else {
                results = this.severityArray;
            }
            setTimeout(function() {
                stream.add(results);
                stream.resolve(results);
            },0);
            return stream;
        }
    }
} , {
        /**
         * severityArray and severityById are class-level because HazardSeverityService
         * may not be a singleton at this time, but each HazardSeverity instance
         * must be to accurately simulate future functionality.
         */

    severityArray: {
        value: [
            new HazardSeverity("WARNING", "Warning", "Icon-multi-warning", "255, 0, 0"),
            new HazardSeverity("WATCH", "Watch", "Icon-multi-watch", "255, 255, 0"),
            new HazardSeverity("ADVISORY", "Advisory", "Icon-multi-advisory", "0, 255, 0"),
            new HazardSeverity("INFORMATION", "Information", "Icon-multi-information", "49, 153, 240"),
            new HazardSeverity("TERMINATION", "Termination", "Icon-multi-termination", "102, 102, 102")
        ]
    },
    _severityById: {
        value: null
    },
    severityById: {
        get: function () {
            if (HazardSeverityService._severityById == null) {
                HazardSeverityService._severityById = {};
                var i, len,severity;
                for (i = 0, len = HazardSeverityService.severityArray.length; i < len; i++) {
                    severity = HazardSeverityService.severityArray[i];
                    HazardSeverityService._severityById[severity.id] = severity;
                }
            }
            return HazardSeverityService._severityById;
        }
    }
});
