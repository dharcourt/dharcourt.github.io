/**
 * @module logic/simple-renderer.js
 */
var Renderer = require("logic/map/renderer").Renderer,

    /**
     * @class ImportRenderer
     * @extends Renderer
     *
     * This object is used by a import layer to convert geojson styles to
     * map engine styles
     */
    ImportRenderer = exports.ImportRenderer = Renderer.specialize(/** @lends ImportRenderer.prototype */ {
        constructor: {
            value: function SimpleRenderer() {
            }
        },

        render: {
            value: function (properties) {
                var style = properties.style;

                if (!style) {
                    switch (properties.type) {
                        case "Point":
                        case "MultiPoint":
                            style = this._renderPoint();
                            break;
                        case "LineString":
                        case "MultiLineString":
                            style = this._renderLine();
                            break;
                        case "Polygon":
                        case "MultiPolygon":
                            style = this._renderPolygon();
                            break;
                    }
                }

                return style;
            }
        },

        _renderPoint: {
            value: function () {
                return ImportRenderer.getDefaultPoint();
            }
        },

        _renderLine: {
            value: function () {
                return ImportRenderer.getDefaultLine();
            }
        },

        _renderPolygon: {
            value: function () {
                return ImportRenderer.getDefaultPolygon();
            }
        }
    }, {
        getDefaultPoint: {
            value: function () {
                var url = L.Icon.Default.imagePath + "/marker-icon.png",
                    isRetina = false,
                    size = {
                        width: 25,
                        height: 41
                    },
                    scale = size;

                if (isRetina) {
                    url = L.Icon.Default.imagePath + "/marker-icon-2x.png";
                    scale = {
                        width: 2 * size.width,
                        height: 2 * size.height
                    };
                }

                return {
                    url: url,
                    size: size,
                    scale: scale
                };
            }
        },
        getDefaultLine: {
            value: function () {
                return {
                    strokeColor: "#2880CA",
                    strokeWeight: 2
                };
            }
        },
        getDefaultPolygon: {
            value: function () {
                return {
                    fillColor: "#2880CA",
                    fillOpacity: 0.7,
                    strokeColor: "#2880CA",
                    strokeWeight: 2
                };
            }
        }
    });
