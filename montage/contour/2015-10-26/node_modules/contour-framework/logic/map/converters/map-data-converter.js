/**
 * @module logic/map/converters/map-data-converter.js
 * @requires montage/ui/component
 */
var Montage = require("montage").Montage,
    Geojson = require("logic/map/converters/geojson").GeoJson,
    Wellknown = require("logic/map/converters/wellknown").Wellknown,
    Kml = require("logic/map/converters/kml").Kml;

exports.MapDataConverter = Montage.specialize(/** @lends PostMessageInterface# */ {},
    {
        _docFromString: {
            /**
             * Convert string to document object
             *
             * @param {string} xml - string to parse
             * @param {string} type - text type
             * @returns {Document}
             */
            value: function (xml, type) {
                var parser = new window.DOMParser();
                return parser.parseFromString(xml, type || "text/xml");
            }
        },
        kmlToGeojson: {
            /**
             * Convert kml string to geojson object
             *
             * @param {string} kml - kml string to parse
             * @param {Function} callback - callback function
             */
            value: function (kml, callback) {
                if (typeof kml === "string") {
                    kml = this._docFromString(kml);
                }

                var parser = new Kml();

                parser.parse(kml);

                parser.addEventListener("parsed", function (event) {
                    callback(event.detail);
                });
            }
        },
        gpxToGeojson: {
            /**
             * Convert gpx object to geojson object
             *
             * @param {Object} gpx - gpx string to parse
             * @returns {Object} geojson - valid GoeJson object
             */
            value: function (gpx) {
                if (typeof gpx === "string") {
                    gpx = this._docFromString(gpx);
                }
                return Geojson.fromGpx(gpx);
            }
        },
        wktToGeojson: {
            /**
             * Convert string in wkt format to geojson object
             *
             * @param {string} wkt - wkt string to parse
             * @returns {Object|null} geojson - valid GeoJson object
             */
            value: function (wkt) {
                var geometry = Wellknown.parse(wkt);
                if (!geometry) {
                    return null;
                }
                return {
                    type: "Feature",
                    geometry: geometry
                };
            }
        },
        geojsonToKml: {
            /**
             * Convert geojson object ot kml string
             *
             * @param {Object} geojson - valid GeoJson object
             * @param {Object} options - options that helps convert geojson styles to kml styles
             * @returns {string}
             */
            value: function (geojson, options) {
                return Geojson.toKml(geojson, options);
            }
        },
        geojsonToGpx: {
            /**
             * Convert geojson object to geojson object
             *
             * @param {Object} geojson - valid GeoJson object
             * @returns {Object}
             */
            value: function (geojson) {
                return Geojson.toGpx(geojson);
            }
        },
        geojsonToWkt: {
            /**
             * Convert geojson object to wkt string
             *
             * @param {Object} geojson - valid GeoJson object
             * @returns {string}
             */
            value: function (geojson) {
                return Wellknown.stringify(geojson);
            }
        }
    });
